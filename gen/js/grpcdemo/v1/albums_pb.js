// @generated by protoc-gen-es v1.0.0
// @generated from file grpcdemo/v1/albums.proto (package grpcdemo.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

// option go_package = "github.com/panyam/grpcdemo/protos";

import { FieldMask, proto3 } from "@bufbuild/protobuf";
import { Album } from "./models_pb.js";

/**
 *
 * The request for (partially) updating an Album.
 *
 * @generated from message grpcdemo.v1.CreateAlbumRequest
 */
export const CreateAlbumRequest = proto3.makeMessageType(
  "grpcdemo.v1.CreateAlbumRequest",
  () => [
    { no: 1, name: "album", kind: "message", T: Album },
  ],
);

/**
 *
 * Response of an album creation.
 *
 * @generated from message grpcdemo.v1.CreateAlbumResponse
 */
export const CreateAlbumResponse = proto3.makeMessageType(
  "grpcdemo.v1.CreateAlbumResponse",
  () => [
    { no: 1, name: "album", kind: "message", T: Album },
  ],
);

/**
 *
 * The request for (partially) updating an Album.
 *
 * @generated from message grpcdemo.v1.UpdateAlbumRequest
 */
export const UpdateAlbumRequest = proto3.makeMessageType(
  "grpcdemo.v1.UpdateAlbumRequest",
  () => [
    { no: 1, name: "album", kind: "message", T: Album },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ],
);

/**
 *
 * The request for (partially) updating an Album.
 *
 * @generated from message grpcdemo.v1.UpdateAlbumResponse
 */
export const UpdateAlbumResponse = proto3.makeMessageType(
  "grpcdemo.v1.UpdateAlbumResponse",
  () => [
    { no: 1, name: "album", kind: "message", T: Album },
  ],
);

/**
 *
 * Gets a single album
 *
 * @generated from message grpcdemo.v1.GetAlbumRequest
 */
export const GetAlbumRequest = proto3.makeMessageType(
  "grpcdemo.v1.GetAlbumRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * Response for an album get.
 *
 * @generated from message grpcdemo.v1.GetAlbumResponse
 */
export const GetAlbumResponse = proto3.makeMessageType(
  "grpcdemo.v1.GetAlbumResponse",
  () => [
    { no: 1, name: "albums", kind: "message", T: Album },
  ],
);

/**
 *
 * Batch gets multiple albums.
 *
 * @generated from message grpcdemo.v1.GetAlbumsRequest
 */
export const GetAlbumsRequest = proto3.makeMessageType(
  "grpcdemo.v1.GetAlbumsRequest",
  () => [
    { no: 1, name: "ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 *
 * Response for an album batch get.
 *
 * @generated from message grpcdemo.v1.GetAlbumsResponse
 */
export const GetAlbumsResponse = proto3.makeMessageType(
  "grpcdemo.v1.GetAlbumsResponse",
  () => [
    { no: 1, name: "albums", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Album} },
  ],
);

/**
 *
 * An album search request.  For now only paginations params are provided.
 *
 * @generated from message grpcdemo.v1.ListAlbumsRequest
 */
export const ListAlbumsRequest = proto3.makeMessageType(
  "grpcdemo.v1.ListAlbumsRequest",
  () => [
    { no: 1, name: "page_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * @generated from message grpcdemo.v1.ListAlbumsResponse
 */
export const ListAlbumsResponse = proto3.makeMessageType(
  "grpcdemo.v1.ListAlbumsResponse",
  () => [
    { no: 1, name: "albums", kind: "message", T: Album, repeated: true },
    { no: 2, name: "next_page_key", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 *
 * Request to delete an album.
 *
 * @generated from message grpcdemo.v1.DeleteAlbumRequest
 */
export const DeleteAlbumRequest = proto3.makeMessageType(
  "grpcdemo.v1.DeleteAlbumRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 *
 * Album deletion response
 *
 * @generated from message grpcdemo.v1.DeleteAlbumResponse
 */
export const DeleteAlbumResponse = proto3.makeMessageType(
  "grpcdemo.v1.DeleteAlbumResponse",
  [],
);

